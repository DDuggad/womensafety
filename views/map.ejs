<!DOCTYPE html>
<html>
<head>
  <title>My Live Location</title>
  <style>
    body {
      text-align: center;
      font-family: Arial, sans-serif;
      margin: 20px;
    }
    #map {
      height: 300px;
      width: 80%;
      margin: 20px auto;
      border: 1px solid #ccc;
    }
    .panic-btn {
      margin: 10px auto;
      display: block;
      padding: 8px 16px;
      font-size: 16px;
      background: red;
      color: white;
      border: none;
      border-radius: 6px;
      cursor: pointer;
    }
    .back-link {
      display: inline-block;
      margin-bottom: 10px;
      color: #007bff;
      text-decoration: none;
    }
    .back-link:hover {
      text-decoration: underline;
    }
  </style>
</head>
<body>
  <a href="/dashboard" class="back-link">‚Üê Back to Dashboard</a>
  <h1>Current Location</h1>
  <button onclick="sendPanic(this)" class="panic-btn">üö® Send Panic Alert</button>
  <div id="map"></div>

  <script>
    let map, marker, lastPanic = 0;

    function initMap() {
      map = new google.maps.Map(document.getElementById('map'), {
        center: { lat: 0, lng: 0 },
        zoom: 15
      });
      loadCurrentLocation();
      setInterval(loadCurrentLocation, 250 * 1000);
    }

    async function loadCurrentLocation() {
      try {
        const res = await fetch('/locations-data', { credentials: 'include' });
        const locs = await res.json();
        if (!locs.length) return;

        const { latitude, longitude } = locs[0];
        const pos = { lat: latitude, lng: longitude };
        map.setCenter(pos);

        if (marker) {
          marker.setPosition(pos);
        } else {
          marker = new google.maps.Marker({
            position: pos,
            map: map,
            title: 'Current Location'
          });
        }
      } catch (e) {
        console.error('Error loading location:', e);
      }
    }

    async function sendPanic(button) {
      const now = Date.now();
      if (now - lastPanic < 35_000) {
        return alert('Only one panic alert every 35 seconds allowed.');
      }
      lastPanic = now;
      button.disabled = true;

      if (!navigator.geolocation) {
        alert('Geolocation not supported');
        button.disabled = false;
        return;
      }
      navigator.geolocation.getCurrentPosition(async pos => {
        try {
          const { latitude, longitude } = pos.coords;
          const response = await fetch('/panic', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            credentials: 'include',
            body: JSON.stringify({ latitude, longitude })
          });
          const data = await response.json();
          alert(data.message || 'Panic alert sent!');
          loadCurrentLocation();
        } catch (err) {
          console.error('Panic error:', err);
          alert('Failed to send panic alert.');
        } finally {
          button.disabled = false;
        }
      }, () => {
        alert('Please enable location services.');
        button.disabled = false;
      });
    }
  </script>

  <script
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBrI9BCKW9G6l67-QUfVkLwywpLLA1hLcQ&callback=initMap&v=weekly"
    async defer>
  </script>
</body>
</html>
