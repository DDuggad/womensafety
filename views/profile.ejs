<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>My Profile - SAFEHer</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    :root {
      --primary: #ff4081;
      --primary-dark: #c60055;
      --secondary: #5c6bc0;
      --light: #f8f9fa;
      --dark: #343a40;
      --success: #28a745;
      --text: #333;
      --shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    /* Unique styling for profile page */
    body {
      color: var(--text);
      background-color: var(--light);
      min-height: 100vh;
      overflow-x: hidden;
      background: linear-gradient(135deg, rgba(255, 64, 129, 0.02) 0%, rgba(92, 107, 192, 0.02) 100%);
      padding-top: 80px;
      /* Add padding to account for fixed header */
    }

    .safety-header {
      background-color: white;
      box-shadow: var(--shadow);
      position: fixed;
      width: 100%;
      z-index: 1000;
      transition: all 0.3s ease;
      border-bottom: 3px solid transparent;
      background-image: linear-gradient(#fff, #fff), linear-gradient(90deg, var(--primary), var(--secondary));
      background-origin: border-box;
      background-clip: content-box, border-box;
      top: 0;
      /* Ensure header is at the top of the viewport */
      left: 0;
      /* Ensure header spans full width */
    }

    .header-container {
      display: flex;
      justify-content: space-between;
      align-items: center;
      max-width: 1000px;
      margin: 0 auto;
      padding: 15px 20px;
    }

    .logo {
      font-weight: 700;
      color: var(--primary);
      font-size: 1.5rem;
      display: flex;
      align-items: center;
    }

    .logo i {
      margin-right: 10px;
      transition: transform 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

    .logo:hover i {
      transform: rotate(20deg) scale(1.1);
    }

    .header-buttons {
      display: flex;
      gap: 12px;
      align-items: center;
    }

    .header-buttons .btn {
      border-radius: 8px;
      font-weight: 500;
      padding: 8px 16px;
      transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
      position: relative;
      overflow: hidden;
    }

    .btn::before {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 0;
      height: 0;
      background: rgba(255, 255, 255, 0.2);
      border-radius: 50%;
      transform: translate(-50%, -50%);
      transition: width 0.6s, height 0.6s;
    }

    .btn:hover::before {
      width: 300px;
      height: 300px;
    }

    .btn-primary {
      background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
      border: none;
    }

    .btn-primary:hover {
      transform: translateY(-3px);
      box-shadow: 0 5px 15px rgba(255, 64, 129, 0.2);
    }

    .btn-outline-primary {
      color: var(--primary);
      border: 2px solid var(--primary);
    }

    .btn-outline-primary:hover {
      color: white;
      background-color: var(--primary);
      transform: translateY(-3px);
      box-shadow: 0 5px 15px rgba(255, 64, 129, 0.2);
    }

    .header-buttons .btn i {
      margin-right: 8px;
      transition: all 0.3s ease;
    }

    .header-buttons .btn:hover i {
      transform: translateX(-3px);
    }

    /* Profile Container */
    .profile-container {
      max-width: 600px;
      margin: 20px auto 40px;
      /* Adjust top margin to work with fixed header */
      background: white;
      border-radius: 15px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
      padding: 35px;
      border: 1px solid rgba(0, 0, 0, 0.05);
      opacity: 0;
      transform: translateY(30px);
      animation: fadeInUp 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
      position: relative;
      overflow: hidden;
    }

    .profile-container::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M11 18c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm48 25c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm-43-7c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm63 31c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM34 90c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm56-76c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM12 86c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm28-65c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm23-11c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-6 60c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm29 22c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zM32 63c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm57-13c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-9-21c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM60 91c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM35 41c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM12 60c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2z' fill='%23ff4081' fill-opacity='0.03' fill-rule='evenodd'/%3E%3C/svg%3E");
      z-index: -1;
    }

    .profile-title {
      text-align: center;
      color: var(--primary);
      margin-bottom: 35px;
      font-weight: 700;
      position: relative;
      padding-bottom: 15px;
    }

    .profile-title:after {
      content: '';
      position: absolute;
      left: 50%;
      bottom: 0;
      width: 100px;
      height: 4px;
      background: linear-gradient(to right, var(--primary), var(--secondary));
      transform: translateX(-50%);
      border-radius: 2px;
    }

    .form-label {
      font-weight: 600;
      color: var(--primary);
      margin-bottom: 8px;
      font-size: 0.95rem;
      display: flex;
      align-items: center;
    }

    .form-label span {
      display: inline-flex;
      justify-content: center;
      align-items: center;
      width: 20px;
      height: 20px;
      background-color: var(--primary);
      color: white;
      border-radius: 50%;
      font-size: 12px;
      margin-left: 8px;
      font-weight: bold;
    }

    .form-control {
      height: 50px;
      border-radius: 10px;
      border: 2px solid rgba(0, 0, 0, 0.08);
      padding-left: 15px;
      margin-bottom: 20px;
      transition: all 0.3s ease;
      font-size: 1rem;
      background-color: rgba(248, 249, 250, 0.5);
    }

    .form-control:focus {
      border-color: var(--primary);
      box-shadow: 0 0 0 3px rgba(255, 64, 129, 0.1);
      background-color: white;
      transform: translateY(-2px);
    }

    .form-control[readonly] {
      background-color: rgba(240, 240, 240, 0.5);
      color: #777;
      cursor: not-allowed;
      border: 2px solid rgba(0, 0, 0, 0.05);
    }

    .form-control.is-valid {
      border-color: var(--success);
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e");
      background-repeat: no-repeat;
      background-position: right calc(0.375em + 0.1875rem) center;
      background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
    }

    #profileForm button {
      height: 50px;
      border-radius: 10px;
      font-weight: 600;
      width: 100%;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
      background: linear-gradient(45deg, var(--primary) 0%, var(--secondary) 100%);
      border: none;
      margin-top: 15px;
      position: relative;
      overflow: hidden;
    }

    #profileForm button::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      transition: 0.5s;
    }

    #profileForm button:hover::before {
      left: 100%;
    }

    #profileForm button:hover {
      transform: translateY(-3px);
      box-shadow: 0 8px 20px rgba(255, 64, 129, 0.3);
    }

    .alert-success {
      opacity: 0;
      transform: translateY(-10px);
      animation: slideDown 0.5s forwards;
      background: linear-gradient(to right, rgba(40, 167, 69, 0.1), rgba(40, 167, 69, 0.05));
      border-left: 4px solid var(--success);
      color: var(--success);
    }

    @keyframes slideDown {
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    /* Animations */
    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }

      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    /* Responsive Adjustments */
    @media (max-width: 768px) {
      body {
        padding-top: 70px;
        /* Increase padding for smaller screens with stacked header elements */
      }

      .profile-container {
        margin: 15px;
        padding: 20px;
        border-radius: 12px;
      }

      .header-container {
        flex-direction: column;
        padding: 10px 15px;
        gap: 10px;
      }

      .logo {
        font-size: 1.3rem;
      }

      .header-buttons {
        width: 100%;
        justify-content: center;
      }

      .header-buttons .btn {
        padding: 6px 12px;
        font-size: 0.9rem;
      }

      .profile-title {
        font-size: 1.5rem;
        margin-bottom: 25px;
      }

      .profile-title:after {
        width: 80px;
      }

      #profileForm button {
        height: 48px;
      }
    }
  </style>
</head>

<body>
  <!-- Header with properly aligned buttons -->
  <header class="safety-header">
    <div class="header-container">
      <div class="logo">
        <a href="/map" style="text-decoration: none; color: var(--primary); display: flex; align-items: center;">
          <i class="fas fa-shield-alt"></i> SAFEHer
        </a>
      </div>
      <div class="header-buttons">
        <a href="/map" class="btn btn-outline-primary">
          <i class="fas fa-map-marker-alt"></i> <span class="d-none d-sm-inline">Map</span>
        </a>
        <a href="/logout" class="btn btn-primary">
          <i class="fas fa-sign-out-alt"></i> <span class="d-none d-sm-inline">Logout</span>
        </a>
      </div>
    </div>
  </header>

  <!-- Profile Form -->
  <div class="profile-container">
    <h1 class="profile-title">My Profile</h1>

    <form id="profileForm">
      <div class="mb-3">
        <label for="name" class="form-label">Name</label>
        <input type="text" class="form-control" name="name" id="name" value="<%= user.name %>" readonly>
      </div>

      <div class="mb-3">
        <label for="email" class="form-label">Email</label>
        <input type="email" class="form-control" name="email" id="email" value="<%= user.email %>" readonly>
      </div>

      <div class="mb-3">
        <label for="emergencyContact" class="form-label">Emergency Contact <span>*</span></label>
        <input type="text" class="form-control" name="emergencyContact" id="emergencyContact"
          value="<%= user.emergencyContact || '' %>" required pattern="[0-9]{10}"
          title="Please enter a valid 10-digit phone number">
      </div>

      <div class="mb-3">
        <label for="emergencyEmail" class="form-label">Emergency Email</label>
        <input type="email" class="form-control" name="emergencyEmail" id="emergencyEmail"
          value="<%= user.emergencyEmail || '' %>">
      </div>

      <button type="submit" class="btn btn-primary">Update Profile</button>
    </form>
  </div>

  <script>
    // Sticky header
    window.addEventListener('scroll', function () {
      const header = document.querySelector('.safety-header');
      header.classList.toggle('scrolled', window.scrollY > 50);
    });

    // Form submission
    document.getElementById("profileForm").addEventListener("submit", async function (e) {
      e.preventDefault();

      const formData = new FormData(this);
      const data = {
        emergencyContact: formData.get("emergencyContact"),
        emergencyEmail: formData.get("emergencyEmail")
      };

      const res = await fetch("/profile/update", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify(data)
      });

      if (res.ok) {
        alert("Profile updated successfully!");
        window.location.href = "/map";
      } else {
        alert("Failed to update profile.");
      }
    });

    // Add subtle animation to form inputs
    const formInputs = document.querySelectorAll('.form-control');

    formInputs.forEach(input => {
      if (!input.hasAttribute('readonly')) {
        input.addEventListener('focus', function () {
          this.parentElement.classList.add('input-active');
        });

        input.addEventListener('blur', function () {
          this.parentElement.classList.remove('input-active');
        });
      }
    });
  </script>

  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>